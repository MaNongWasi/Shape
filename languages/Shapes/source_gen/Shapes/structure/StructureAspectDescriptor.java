package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptOval = createDescriptorForOval();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptOval, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Oval:
        return myConceptOval;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925c1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262117825");
    b.version(2);
    b.aggregate("shapes", 0x1a3e5529f2925c4L).target(0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925acL).optional(true).ordered(true).multiple(true).origin("118190158262117828").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925adL);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925acL);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262117805");
    b.version(2);
    b.property("x", 0x1a3e5529f2925aeL).type(PrimitiveTypeId.INTEGER).origin("118190158262117806").done();
    b.property("y", 0x1a3e5529f2925b0L).type(PrimitiveTypeId.INTEGER).origin("118190158262117808").done();
    b.property("radius", 0x1a3e5529f2925b3L).type(PrimitiveTypeId.INTEGER).origin("118190158262117811").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2a6d7cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262201724");
    b.version(2);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2ab535L);
    b.class_(false, false, false);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262220085");
    b.version(2);
    b.associate("target", 0x1a3e5529f2ab536L).target(0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2a6d7cL).optional(false).origin("118190158262220086").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOval() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Oval", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x463cf0efcf90f492L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925acL);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/5061184994027828370");
    b.version(2);
    b.property("x", 0x463cf0efcf90f6d7L).type(PrimitiveTypeId.INTEGER).origin("5061184994027828951").done();
    b.property("y", 0x463cf0efcf90f6d9L).type(PrimitiveTypeId.INTEGER).origin("5061184994027828953").done();
    b.property("width", 0x463cf0efcf90f6dcL).type(PrimitiveTypeId.INTEGER).origin("5061184994027828956").done();
    b.property("height", 0x463cf0efcf90f6e0L).type(PrimitiveTypeId.INTEGER).origin("5061184994027828960").done();
    b.alias("oval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925acL);
    b.class_(false, true, false);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262117804");
    b.version(2);
    b.aggregate("color", 0x1a3e5529f2ab560L).target(0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2ab535L).optional(false).ordered(true).multiple(false).origin("118190158262220128").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925b7L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0x27991d4286a74227L, 0x861881e0e47a254cL, 0x1a3e5529f2925acL);
    b.origin("r:7fccd85e-8400-492b-8d62-4ff6708e1f42(Shapes.structure)/118190158262117815");
    b.version(2);
    b.property("upperLeftX", 0x1a3e5529f2925b8L).type(PrimitiveTypeId.INTEGER).origin("118190158262117816").done();
    b.property("upperLeftY", 0x1a3e5529f2925baL).type(PrimitiveTypeId.INTEGER).origin("118190158262117818").done();
    b.property("size", 0x1a3e5529f2925bdL).type(PrimitiveTypeId.INTEGER).origin("118190158262117821").done();
    b.alias("square");
    return b.create();
  }
}
